<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">

	<munit:config name="test-suite-ReimbursementEntry.xml" />
	<munit:test name="ReimbursementExperienceTest"
		doc:id="e81ec3f7-fc86-4a6e-9c83-a11680c519ef">
		<munit:behavior>
			<munit-tools:mock-when
				doc:name="Mock http request"
				doc:id="102f94f5-627b-4720-ba6d-9c8901b1fa86"
				processor="http:listener">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="/reimbursement" attributeName="path" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value='#["GetRequest"]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when
				doc:name="Mock when process email request"
				doc:id="fec363ce-f6af-425d-b78a-0530b5a0ab97"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="/email" attributeName="path" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value='#["HR system updated"]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>

		</munit:behavior>
		<munit:execution>
			<flow-ref doc:name="ReimbursementExperience"
				doc:id="05b5d5d0-1db7-4345-bfee-d664e8c5461e"
				name="ReimbursementExperience" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that
				doc:name="Assert that" doc:id="d266d3e0-f05d-439e-aebc-4075a147dbf1"
				is='#[MunitTools::equalToIgnoringCase("HR system updated")]'
				expression="#[payload]" />
		</munit:validation>
	</munit:test>
	<munit:test
		name="ReimbursementExperienceTest-EMAIL:CONNECTIVITY-Error"
		doc:id="bf2685b6-a46f-453b-8538-ad6dc555fed5">
		<munit:behavior>
			<munit-tools:mock-when
				doc:name="Mock http request"
				doc:id="edd59b64-f06c-457a-8a98-ffe2784885df"
				processor="http:listener">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="/reimbursement" attributeName="path" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value='#["GetRequest"]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when
				doc:name="Mock when process email request"
				doc:id="215a6b22-fea4-4a03-9205-4b8f4e002096"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="/email" attributeName="path" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:error
						typeId="#['EMAIL:CONNECTIVITY']" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<flow-ref doc:name="ReimbursementExperience"
				doc:id="97fd785d-32c5-4a29-af95-762b527ce2c2"
				name="ReimbursementExperience" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that
				doc:name="Assert that" doc:id="a64e5b75-1a9f-472f-92c4-5320fd86b916"
				is='#[MunitTools::equalToIgnoringCase("EMAIL:CONNECTIVITY")]'
				expression="#[payload]" />
		</munit:validation>
	</munit:test>
	<munit:test
		name="ReimbursementExperienceTest-EMAIL:INVALID_CREDENTIALS-Error"
		doc:id="637c84bf-1cf8-416c-b5f2-422d238c7108">
		<munit:behavior>
			<munit-tools:mock-when
				doc:name="Mock http request"
				doc:id="e1ee666c-254b-464f-b991-e5ded2344ce1"
				processor="http:listener">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="/reimbursement" attributeName="path" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value='#["GetRequest"]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when
				doc:name="Mock when process email reqeust"
				doc:id="05ce2f9b-0c66-4715-bbd3-e162caf678ca"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="/email" attributeName="path" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:error
						typeId="#['EMAIL:INVALID_CREDENTIALS']" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<flow-ref doc:name="ReimbursementExperience"
				doc:id="91fc065b-5590-4ea6-af43-a1de7a2dfddf"
				name="ReimbursementExperience" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that
				doc:name="Assert that" doc:id="cabfce85-f775-43ab-865d-f7fa4235aa39"
				is='#[MunitTools::equalToIgnoringCase("EMAIL:INVALID_CREDENTIALS")]'
				expression="#[payload]" />
		</munit:validation>
	</munit:test>


</mule>
